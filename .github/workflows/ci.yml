name: Build + Test

on:
  push:
    branches:
      - main
      - alpha-dev
  pull_request:
    branches:
      - main
      - alpha-dev
  workflow_dispatch:
    inputs:
      upload-outputs:
        description: 'Whether to upload outputs'
        default: false
        type: boolean

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    name: Testing on ${{ matrix.os }} with Python ${{ matrix.python }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.10"
          - "3.13"
    
    defaults:
      run:
        # Conda requires a login shell in order to work properly
        shell: bash -l {0}  
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Helios dev environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: helios-dev
          environment-file: environment-dev.yml
          python-version: ${{ matrix.python }}
          miniconda-version: "latest"
          conda-remove-defaults: true

      - name: Install Conda GCC
        if: runner.os == 'Linux'
        run: |
          conda install -y -c conda-forge gcc gxx

      - name: Install Helios
        run: |
          python -m pip install --no-build-isolation --config-settings=cmake.build-type="Debug" --config-settings=build-dir="build" -v .
        env:
          SETUPTOOLS_SCM_SUBPROCESS_TIMEOUT: "120"
      
      - name: Run C++ test suite
        run: |
          ./build/src/test/helios_test

      # Do not run on MacOS for now - we do not yet officially support it and we need to invest a bit
      # more efforts into investigating broken LAZ files written by Helios on MacOS.
      - name: Run marked tests
        if: runner.os != 'macOS' 
        run: |
          python -m pytest

      # TODO: Reenable this after porting the regression tests
      # - name: Run tests (incl. regression tests)
      #   if: runner.os == 'Windows'
      #   run: |
      #     python -m pytest --regression-tests

      # - name: Run tests (excl. regression tests)
      #   if: runner.os == 'Linux'
      #   run: |
      #     python -m pytest

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4
      #   if: github.event.inputs.upload-outputs == 'true'
      #   with:
      #     name: test-results
      #     path: output/*
      #     retention-days: 1
